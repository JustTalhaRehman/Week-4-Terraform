name: "Terraform CI/CD"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev/stage/prod)"
        required: true
        default: "prod"

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        run: terraform init -input=false -backend-config="key=${{ github.event.inputs.environment }}.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=envs/${{ github.event.inputs.environment }}.tfvars -out=tfplan

      - name: Upload plan + lockfile
        uses: actions/upload-artifact@v4
        with:
          name: tf-artifacts
          path: |
            tfplan
            .terraform.lock.hcl

  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}   # ðŸ‘ˆ Dev, Stage, Prod â€” sab approval required honge
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Download plan + lockfile
        uses: actions/download-artifact@v4
        with:
          name: tf-artifacts

      - name: Terraform Init (again for apply)
        run: terraform init -input=false -backend-config="key=${{ github.event.inputs.environment }}.tfstate"

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
