name: "Terraform CI/CD Pipeline"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev/staging/prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod
  push:
    branches:
      - main

jobs:
  plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: terraform init -backend-config="key=${ENVIRONMENT}/terraform.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="environment=${ENVIRONMENT}"

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ github.event.inputs.environment || 'dev' }} # âœ… Native approval trigger
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Init
        run: terraform init -backend-config="key=${ENVIRONMENT}/terraform.tfstate"

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
